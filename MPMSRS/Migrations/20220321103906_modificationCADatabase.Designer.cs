// <auto-generated />
using System;
using MPMSRS.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MPMSRS.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220321103906_modificationCADatabase")]
    partial class modificationCADatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MPMSRS.Models.Entities.Assignments", b =>
                {
                    b.Property<Guid>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("NetworkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("AssignmentId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NetworkId");

                    b.ToTable("TB_Assignments");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Attachments", b =>
                {
                    b.Property<Guid>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AttachmentMime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AttachmentUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("AttachmentId");

                    b.ToTable("TB_Attachments");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Authentications", b =>
                {
                    b.Property<Guid>("AuthenticationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Otp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserData")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AuthenticationId");

                    b.ToTable("TB_Authentications");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActionAttachments", b =>
                {
                    b.Property<Guid>("CorrectiveActionAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CorrectiveActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("CorrectiveActionAttachmentId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("CorrectiveActionId");

                    b.ToTable("TB_Corrective_Action_Attachments");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActionPICs", b =>
                {
                    b.Property<Guid>("CorrectiveActionPICId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CorrectiveActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("CorrectiveActionPICId");

                    b.HasIndex("CorrectiveActionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TB_Corrective_Action_PICs");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActionProblemCategories", b =>
                {
                    b.Property<Guid>("CorrectiveActionPCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CorrectiveActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrectiveActionPCName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("ProblemCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("CorrectiveActionPCId");

                    b.HasIndex("CorrectiveActionId");

                    b.HasIndex("ProblemCategoryId");

                    b.ToTable("TB_Corrective_Action_Problem_Categories");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActions", b =>
                {
                    b.Property<Guid>("CorrectiveActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CorrectiveActionDetail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CorrectiveActionName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProgressBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("ValidateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("VisitingDetailReportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CorrectiveActionId");

                    b.HasIndex("VisitingDetailReportId");

                    b.ToTable("TB_Corrective_Actions");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Divisions", b =>
                {
                    b.Property<Guid>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("DivisionId");

                    b.ToTable("TB_Divisions");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Networks", b =>
                {
                    b.Property<Guid>("NetworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNum")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AhmCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("ChannelDealer")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("DLREmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DealerName")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Email")
                        .HasMaxLength(33)
                        .IsUnicode(false)
                        .HasColumnType("varchar(33)");

                    b.Property<string>("IdKaresidenanHC3")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("IdKaresidenanTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Karesidenan")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("KodeKareswil")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("MDCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("NPKDeptHeadHC3")
                        .HasColumnType("int");

                    b.Property<string>("NPKDeptHeadTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("NPKDivHeadHC3")
                        .HasColumnType("int");

                    b.Property<string>("NPKDivHeadTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("NPKSpvHC3")
                        .HasColumnType("int");

                    b.Property<string>("NPKSpvTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NPKSupervisor")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NamaDeptHeadHC3")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)");

                    b.Property<string>("NamaDeptHeadTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NamaDivHeadHC3")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("NamaDivHeadTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NamaKaresHC3")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NamaKaresTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NamaSPVHC3")
                        .HasMaxLength(23)
                        .IsUnicode(false)
                        .HasColumnType("varchar(23)");

                    b.Property<string>("NamaSPVTSD")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NamaSupervisor")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("NetworkId");

                    b.ToTable("TB_Networks");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Positions", b =>
                {
                    b.Property<Guid>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Channel")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("GroupJabatanId")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("KodeJabatan")
                        .HasColumnType("int");

                    b.Property<string>("NamaGroupPosition")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("NamaJabatan")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("PositionId");

                    b.ToTable("TB_Positions");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.ProblemCategories", b =>
                {
                    b.Property<Guid>("ProblemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProblemCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("ProblemCategoryId");

                    b.ToTable("TB_Problem_Categories");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Roles", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("RoleId");

                    b.ToTable("TB_Roles");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.UserNetworkMappings", b =>
                {
                    b.Property<Guid>("UserNetworkMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("NetworkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.HasKey("UserNetworkMappingId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NetworkId");

                    b.ToTable("TB_User_Network_Mappings");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Users", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyId")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("Department")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("DisplayName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid?>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("InternalTitle")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Password")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Phone")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("Username")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("WorkLocation")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("RoleId");

                    b.ToTable("TB_Users");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReportAttachments", b =>
                {
                    b.Property<Guid>("VisitingDetailReportAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("VisitingDetailReportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VisitingDetailReportAttachmentId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("VisitingDetailReportId");

                    b.ToTable("TB_Visiting_Detail_Report_Attachments");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReportPICs", b =>
                {
                    b.Property<Guid>("VisitingDetailReportPICId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("VisitingDetailReportId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VisitingDetailReportPICId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VisitingDetailReportId");

                    b.ToTable("TB_Visiting_Detail_Report_PICs");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReportProblemCategories", b =>
                {
                    b.Property<Guid>("VisitingDetailReportPCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("ProblemCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("VisitingDetailReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VisitingDetailReportPCName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("VisitingDetailReportPCId");

                    b.HasIndex("ProblemCategoryId");

                    b.HasIndex("VisitingDetailReportId");

                    b.ToTable("TB_Visiting_Detail_Report_Problem_Categories");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReports", b =>
                {
                    b.Property<Guid>("VisitingDetailReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("NetworkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<DateTime>("VisitingDetailReportDeadline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VisitingDetailReportProblemIdentification")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("VisitingDetailReportStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("VisitingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VisitingDetailReportId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("VisitingId");

                    b.ToTable("TB_Visiting_Detail_Reports");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingNoteMappings", b =>
                {
                    b.Property<Guid>("VisitingNoteMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("VisitingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VisitingNoteMappingDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("VisitingNoteMappingId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VisitingId");

                    b.ToTable("TB_Visiting_Note_Mappings");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingPeoples", b =>
                {
                    b.Property<Guid>("VisitingPeopleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<Guid>("VisitingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VisitingPeopleId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("VisitingId");

                    b.ToTable("TB_Visiting_Peoples");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingTypes", b =>
                {
                    b.Property<Guid>("VisitingTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("VisitingTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("VisitingTypeId");

                    b.ToTable("TB_Visiting_Types");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Visitings", b =>
                {
                    b.Property<Guid>("VisitingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovedByGM")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApprovedByManager")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<Guid>("NetworkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("('SYSTEM')");

                    b.Property<string>("VisitingComment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VisitingStatus")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("VisitingTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VisitingId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("VisitingTypeId");

                    b.ToTable("TB_Visitings");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Assignments", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Divisions", "Division")
                        .WithMany("Assignments")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK_Assignments_Divisions")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Users", "User")
                        .WithMany("Assignments")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Assignments_Users")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Networks", "Network")
                        .WithMany("Assignments")
                        .HasForeignKey("NetworkId")
                        .HasConstraintName("FK_Assignments_Networks")
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Network");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActionAttachments", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Attachments", "Attachment")
                        .WithMany("CorrectiveActionAttachments")
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.CorrectiveActions", "CorrectiveAction")
                        .WithMany("CorrectiveActionAttachments")
                        .HasForeignKey("CorrectiveActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("CorrectiveAction");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActionPICs", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.CorrectiveActions", "CorrectiveAction")
                        .WithMany("CorrectiveActionPICs")
                        .HasForeignKey("CorrectiveActionId")
                        .HasConstraintName("FK_CorrectiveActionPICs_CorrectiveActions")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Users", "User")
                        .WithMany("CorrectiveActionPICs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_CorrectiveActionPICs_Users")
                        .IsRequired();

                    b.Navigation("CorrectiveAction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActionProblemCategories", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.CorrectiveActions", "CorrectiveAction")
                        .WithMany("CorrectiveActionProblemCategories")
                        .HasForeignKey("CorrectiveActionId")
                        .HasConstraintName("FK_CorrectiveActionProblemCategories_CorrectiveActions")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.ProblemCategories", "ProblemCategory")
                        .WithMany("CorrectiveActionProblemCategories")
                        .HasForeignKey("ProblemCategoryId")
                        .HasConstraintName("FK_CorrectiveActionProblemCategories_ProblemCategories")
                        .IsRequired();

                    b.Navigation("CorrectiveAction");

                    b.Navigation("ProblemCategory");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActions", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.VisitingDetailReports", "VisitingDetailReport")
                        .WithMany("CorrectiveActions")
                        .HasForeignKey("VisitingDetailReportId")
                        .HasConstraintName("FK_CorrectiveActions_VisitingDetailReports")
                        .IsRequired();

                    b.Navigation("VisitingDetailReport");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.RefreshToken", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Users", "User")
                        .WithMany("RefreshToken")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_RefreshTokens_Users")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.UserNetworkMappings", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Users", "User")
                        .WithMany("UserNetworkMappings")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_UserNetworkMappings_Users")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Networks", "Network")
                        .WithMany("UserNetworkMappings")
                        .HasForeignKey("NetworkId")
                        .HasConstraintName("FK_UserNetworkMappings_Networks")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Network");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Users", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Attachments", "Attachment")
                        .WithMany("Users")
                        .HasForeignKey("AttachmentId")
                        .HasConstraintName("FK_Users_Attachments");

                    b.HasOne("MPMSRS.Models.Entities.Divisions", "Division")
                        .WithMany("Users")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK_Users_Divisions");

                    b.HasOne("MPMSRS.Models.Entities.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("Attachment");

                    b.Navigation("Division");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReportAttachments", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Attachments", "Attachment")
                        .WithMany("VisitingDetailReportAttachments")
                        .HasForeignKey("AttachmentId")
                        .HasConstraintName("FK_VisitingDetailReportAttachments_Attachments")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.VisitingDetailReports", "VisitingDetailReport")
                        .WithMany("VisitingDetailReportAttachments")
                        .HasForeignKey("VisitingDetailReportId")
                        .HasConstraintName("FK_VisitingDetailReportAttachments_VisitingDetailReports")
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("VisitingDetailReport");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReportPICs", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Users", "User")
                        .WithMany("VisitingDetailReportPICs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_VisitingDetailReportPICs_Users")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.VisitingDetailReports", "VisitingDetailReport")
                        .WithMany("VisitingDetailReportPICs")
                        .HasForeignKey("VisitingDetailReportId")
                        .HasConstraintName("FK_VisitingDetailReportPICs_VisitingDetailReports")
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VisitingDetailReport");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReportProblemCategories", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.ProblemCategories", "ProblemCategory")
                        .WithMany("VisitingDetailReportProblemCategories")
                        .HasForeignKey("ProblemCategoryId")
                        .HasConstraintName("FK_VisitingDetailReportProblemCategories_ProblemCategories")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.VisitingDetailReports", "VisitingDetailReport")
                        .WithMany("VisitingDetailReportProblemCategories")
                        .HasForeignKey("VisitingDetailReportId")
                        .HasConstraintName("FK_VisitingDetailReportProblemCategories_VisitingDetailReports")
                        .IsRequired();

                    b.Navigation("ProblemCategory");

                    b.Navigation("VisitingDetailReport");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReports", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Divisions", "Division")
                        .WithMany("VisitingDetailReports")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK_VisitingDetailReports_Divisions")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Networks", "Network")
                        .WithMany("VisitingDetailReports")
                        .HasForeignKey("NetworkId")
                        .HasConstraintName("FK_VisitingDetailReports_Networks")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Visitings", "Visiting")
                        .WithMany("VisitingDetailReports")
                        .HasForeignKey("VisitingId")
                        .HasConstraintName("FK_VisitingDetailReports_Visitings")
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Network");

                    b.Navigation("Visiting");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingNoteMappings", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Users", "User")
                        .WithMany("VisitingNoteMappings")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_VisitingNoteMappings_Users")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Visitings", "Visiting")
                        .WithMany("VisitingNoteMappings")
                        .HasForeignKey("VisitingId")
                        .HasConstraintName("FK_VisitingNoteMappings_Visitings")
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Visiting");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingPeoples", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Users", "User")
                        .WithMany("VisitingPeoples")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_VisitingPeoples_Users")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.Visitings", "Visiting")
                        .WithMany("VisitingPeoples")
                        .HasForeignKey("VisitingId")
                        .HasConstraintName("FK_VisitingPeoples_Visitings")
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Visiting");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Visitings", b =>
                {
                    b.HasOne("MPMSRS.Models.Entities.Networks", "Network")
                        .WithMany("Visitings")
                        .HasForeignKey("NetworkId")
                        .HasConstraintName("FK_Visitings_Networks")
                        .IsRequired();

                    b.HasOne("MPMSRS.Models.Entities.VisitingTypes", "VisitingType")
                        .WithMany("Visitings")
                        .HasForeignKey("VisitingTypeId")
                        .HasConstraintName("FK_Visitings_VisitingTypes")
                        .IsRequired();

                    b.Navigation("Network");

                    b.Navigation("VisitingType");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Attachments", b =>
                {
                    b.Navigation("CorrectiveActionAttachments");

                    b.Navigation("Users");

                    b.Navigation("VisitingDetailReportAttachments");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.CorrectiveActions", b =>
                {
                    b.Navigation("CorrectiveActionAttachments");

                    b.Navigation("CorrectiveActionPICs");

                    b.Navigation("CorrectiveActionProblemCategories");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Divisions", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Users");

                    b.Navigation("VisitingDetailReports");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Networks", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("UserNetworkMappings");

                    b.Navigation("VisitingDetailReports");

                    b.Navigation("Visitings");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.ProblemCategories", b =>
                {
                    b.Navigation("CorrectiveActionProblemCategories");

                    b.Navigation("VisitingDetailReportProblemCategories");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Users", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("CorrectiveActionPICs");

                    b.Navigation("RefreshToken");

                    b.Navigation("UserNetworkMappings");

                    b.Navigation("VisitingDetailReportPICs");

                    b.Navigation("VisitingNoteMappings");

                    b.Navigation("VisitingPeoples");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingDetailReports", b =>
                {
                    b.Navigation("CorrectiveActions");

                    b.Navigation("VisitingDetailReportAttachments");

                    b.Navigation("VisitingDetailReportPICs");

                    b.Navigation("VisitingDetailReportProblemCategories");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.VisitingTypes", b =>
                {
                    b.Navigation("Visitings");
                });

            modelBuilder.Entity("MPMSRS.Models.Entities.Visitings", b =>
                {
                    b.Navigation("VisitingDetailReports");

                    b.Navigation("VisitingNoteMappings");

                    b.Navigation("VisitingPeoples");
                });
#pragma warning restore 612, 618
        }
    }
}
